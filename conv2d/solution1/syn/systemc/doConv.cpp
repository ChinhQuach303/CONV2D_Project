// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "doConv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic doConv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic doConv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> doConv::ap_ST_fsm_state1 = "1";
const sc_lv<16> doConv::ap_ST_fsm_state2 = "10";
const sc_lv<16> doConv::ap_ST_fsm_state3 = "100";
const sc_lv<16> doConv::ap_ST_fsm_state4 = "1000";
const sc_lv<16> doConv::ap_ST_fsm_state5 = "10000";
const sc_lv<16> doConv::ap_ST_fsm_state6 = "100000";
const sc_lv<16> doConv::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> doConv::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> doConv::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> doConv::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> doConv::ap_ST_fsm_pp0_stage0 = "10000000000";
const sc_lv<16> doConv::ap_ST_fsm_pp0_stage1 = "100000000000";
const sc_lv<16> doConv::ap_ST_fsm_pp0_stage2 = "1000000000000";
const sc_lv<16> doConv::ap_ST_fsm_state19 = "10000000000000";
const sc_lv<16> doConv::ap_ST_fsm_state20 = "100000000000000";
const sc_lv<16> doConv::ap_ST_fsm_state21 = "1000000000000000";
const sc_lv<32> doConv::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool doConv::ap_const_boolean_1 = true;
const int doConv::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> doConv::ap_const_lv32_A = "1010";
const bool doConv::ap_const_boolean_0 = false;
const sc_lv<1> doConv::ap_const_lv1_0 = "0";
const sc_lv<1> doConv::ap_const_lv1_1 = "1";
const sc_lv<32> doConv::ap_const_lv32_B = "1011";
const sc_lv<32> doConv::ap_const_lv32_1 = "1";
const sc_lv<32> doConv::ap_const_lv32_2 = "10";
const sc_lv<32> doConv::ap_const_lv32_3 = "11";
const sc_lv<32> doConv::ap_const_lv32_4 = "100";
const sc_lv<32> doConv::ap_const_lv32_5 = "101";
const sc_lv<32> doConv::ap_const_lv32_6 = "110";
const sc_lv<32> doConv::ap_const_lv32_7 = "111";
const sc_lv<32> doConv::ap_const_lv32_8 = "1000";
const sc_lv<32> doConv::ap_const_lv32_9 = "1001";
const sc_lv<32> doConv::ap_const_lv32_C = "1100";
const sc_lv<32> doConv::ap_const_lv32_D = "1101";
const sc_lv<32> doConv::ap_const_lv32_E = "1110";
const sc_lv<32> doConv::ap_const_lv32_F = "1111";
const sc_lv<15> doConv::ap_const_lv15_0 = "000000000000000";
const sc_lv<16> doConv::ap_const_lv16_0 = "0000000000000000";
const sc_lv<8> doConv::ap_const_lv8_0 = "00000000";
const sc_lv<64> doConv::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> doConv::ap_const_lv64_1 = "1";
const sc_lv<64> doConv::ap_const_lv64_2 = "10";
const sc_lv<64> doConv::ap_const_lv64_3 = "11";
const sc_lv<64> doConv::ap_const_lv64_4 = "100";
const sc_lv<64> doConv::ap_const_lv64_5 = "101";
const sc_lv<64> doConv::ap_const_lv64_6 = "110";
const sc_lv<64> doConv::ap_const_lv64_7 = "111";
const sc_lv<64> doConv::ap_const_lv64_8 = "1000";
const sc_lv<15> doConv::ap_const_lv15_4000 = "100000000000000";
const sc_lv<15> doConv::ap_const_lv15_1 = "1";
const sc_lv<7> doConv::ap_const_lv7_0 = "0000000";
const sc_lv<32> doConv::ap_const_lv32_1F = "11111";
const sc_lv<31> doConv::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> doConv::ap_const_lv32_7E = "1111110";
const sc_lv<32> doConv::ap_const_lv32_7F = "1111111";
const sc_lv<8> doConv::ap_const_lv8_80 = "10000000";
const sc_lv<8> doConv::ap_const_lv8_1 = "1";

doConv::doConv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    doConv_CTRL_BUS_s_axi_U = new doConv_CTRL_BUS_s_axi<C_S_AXI_CTRL_BUS_ADDR_WIDTH,C_S_AXI_CTRL_BUS_DATA_WIDTH>("doConv_CTRL_BUS_s_axi_U");
    doConv_CTRL_BUS_s_axi_U->AWVALID(s_axi_CTRL_BUS_AWVALID);
    doConv_CTRL_BUS_s_axi_U->AWREADY(s_axi_CTRL_BUS_AWREADY);
    doConv_CTRL_BUS_s_axi_U->AWADDR(s_axi_CTRL_BUS_AWADDR);
    doConv_CTRL_BUS_s_axi_U->WVALID(s_axi_CTRL_BUS_WVALID);
    doConv_CTRL_BUS_s_axi_U->WREADY(s_axi_CTRL_BUS_WREADY);
    doConv_CTRL_BUS_s_axi_U->WDATA(s_axi_CTRL_BUS_WDATA);
    doConv_CTRL_BUS_s_axi_U->WSTRB(s_axi_CTRL_BUS_WSTRB);
    doConv_CTRL_BUS_s_axi_U->ARVALID(s_axi_CTRL_BUS_ARVALID);
    doConv_CTRL_BUS_s_axi_U->ARREADY(s_axi_CTRL_BUS_ARREADY);
    doConv_CTRL_BUS_s_axi_U->ARADDR(s_axi_CTRL_BUS_ARADDR);
    doConv_CTRL_BUS_s_axi_U->RVALID(s_axi_CTRL_BUS_RVALID);
    doConv_CTRL_BUS_s_axi_U->RREADY(s_axi_CTRL_BUS_RREADY);
    doConv_CTRL_BUS_s_axi_U->RDATA(s_axi_CTRL_BUS_RDATA);
    doConv_CTRL_BUS_s_axi_U->RRESP(s_axi_CTRL_BUS_RRESP);
    doConv_CTRL_BUS_s_axi_U->BVALID(s_axi_CTRL_BUS_BVALID);
    doConv_CTRL_BUS_s_axi_U->BREADY(s_axi_CTRL_BUS_BREADY);
    doConv_CTRL_BUS_s_axi_U->BRESP(s_axi_CTRL_BUS_BRESP);
    doConv_CTRL_BUS_s_axi_U->ACLK(ap_clk);
    doConv_CTRL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    doConv_CTRL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    doConv_CTRL_BUS_s_axi_U->ap_start(ap_start);
    doConv_CTRL_BUS_s_axi_U->interrupt(interrupt);
    doConv_CTRL_BUS_s_axi_U->ap_ready(ap_ready);
    doConv_CTRL_BUS_s_axi_U->ap_done(ap_done);
    doConv_CTRL_BUS_s_axi_U->ap_idle(ap_idle);
    doConv_KERNEL_BUS_s_axi_U = new doConv_KERNEL_BUS_s_axi<C_S_AXI_KERNEL_BUS_ADDR_WIDTH,C_S_AXI_KERNEL_BUS_DATA_WIDTH>("doConv_KERNEL_BUS_s_axi_U");
    doConv_KERNEL_BUS_s_axi_U->AWVALID(s_axi_KERNEL_BUS_AWVALID);
    doConv_KERNEL_BUS_s_axi_U->AWREADY(s_axi_KERNEL_BUS_AWREADY);
    doConv_KERNEL_BUS_s_axi_U->AWADDR(s_axi_KERNEL_BUS_AWADDR);
    doConv_KERNEL_BUS_s_axi_U->WVALID(s_axi_KERNEL_BUS_WVALID);
    doConv_KERNEL_BUS_s_axi_U->WREADY(s_axi_KERNEL_BUS_WREADY);
    doConv_KERNEL_BUS_s_axi_U->WDATA(s_axi_KERNEL_BUS_WDATA);
    doConv_KERNEL_BUS_s_axi_U->WSTRB(s_axi_KERNEL_BUS_WSTRB);
    doConv_KERNEL_BUS_s_axi_U->ARVALID(s_axi_KERNEL_BUS_ARVALID);
    doConv_KERNEL_BUS_s_axi_U->ARREADY(s_axi_KERNEL_BUS_ARREADY);
    doConv_KERNEL_BUS_s_axi_U->ARADDR(s_axi_KERNEL_BUS_ARADDR);
    doConv_KERNEL_BUS_s_axi_U->RVALID(s_axi_KERNEL_BUS_RVALID);
    doConv_KERNEL_BUS_s_axi_U->RREADY(s_axi_KERNEL_BUS_RREADY);
    doConv_KERNEL_BUS_s_axi_U->RDATA(s_axi_KERNEL_BUS_RDATA);
    doConv_KERNEL_BUS_s_axi_U->RRESP(s_axi_KERNEL_BUS_RRESP);
    doConv_KERNEL_BUS_s_axi_U->BVALID(s_axi_KERNEL_BUS_BVALID);
    doConv_KERNEL_BUS_s_axi_U->BREADY(s_axi_KERNEL_BUS_BREADY);
    doConv_KERNEL_BUS_s_axi_U->BRESP(s_axi_KERNEL_BUS_BRESP);
    doConv_KERNEL_BUS_s_axi_U->ACLK(ap_clk);
    doConv_KERNEL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    doConv_KERNEL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    doConv_KERNEL_BUS_s_axi_U->kernel_address0(kernel_address0);
    doConv_KERNEL_BUS_s_axi_U->kernel_ce0(kernel_ce0);
    doConv_KERNEL_BUS_s_axi_U->kernel_q0(kernel_q0);
    lineBuff_val_0_U = new doConv_lineBuff_vbkb("lineBuff_val_0_U");
    lineBuff_val_0_U->clk(ap_clk);
    lineBuff_val_0_U->reset(ap_rst_n_inv);
    lineBuff_val_0_U->address0(lineBuff_val_0_address0);
    lineBuff_val_0_U->ce0(lineBuff_val_0_ce0);
    lineBuff_val_0_U->we0(lineBuff_val_0_we0);
    lineBuff_val_0_U->d0(lineBuff_val_1_q0);
    lineBuff_val_0_U->q0(lineBuff_val_0_q0);
    lineBuff_val_0_U->address1(lineBuff_val_0_address1);
    lineBuff_val_0_U->ce1(lineBuff_val_0_ce1);
    lineBuff_val_0_U->q1(lineBuff_val_0_q1);
    lineBuff_val_1_U = new doConv_lineBuff_vbkb("lineBuff_val_1_U");
    lineBuff_val_1_U->clk(ap_clk);
    lineBuff_val_1_U->reset(ap_rst_n_inv);
    lineBuff_val_1_U->address0(lineBuff_val_1_address0);
    lineBuff_val_1_U->ce0(lineBuff_val_1_ce0);
    lineBuff_val_1_U->we0(lineBuff_val_1_we0);
    lineBuff_val_1_U->d0(lineBuff_val_2_q0);
    lineBuff_val_1_U->q0(lineBuff_val_1_q0);
    lineBuff_val_1_U->address1(lineBuff_val_1_address1);
    lineBuff_val_1_U->ce1(lineBuff_val_1_ce1);
    lineBuff_val_1_U->q1(lineBuff_val_1_q1);
    lineBuff_val_2_U = new doConv_lineBuff_vbkb("lineBuff_val_2_U");
    lineBuff_val_2_U->clk(ap_clk);
    lineBuff_val_2_U->reset(ap_rst_n_inv);
    lineBuff_val_2_U->address0(lineBuff_val_2_address0);
    lineBuff_val_2_U->ce0(lineBuff_val_2_ce0);
    lineBuff_val_2_U->we0(lineBuff_val_2_we0);
    lineBuff_val_2_U->d0(input_image_q0);
    lineBuff_val_2_U->q0(lineBuff_val_2_q0);
    lineBuff_val_2_U->address1(lineBuff_val_2_address1);
    lineBuff_val_2_U->ce1(lineBuff_val_2_ce1);
    lineBuff_val_2_U->q1(lineBuff_val_2_q1);
    doConv_mac_muladdeOg_U1 = new doConv_mac_muladdeOg<1,1,8,8,16,16>("doConv_mac_muladdeOg_U1");
    doConv_mac_muladdeOg_U1->din0(grp_fu_795_p0);
    doConv_mac_muladdeOg_U1->din1(grp_fu_795_p1);
    doConv_mac_muladdeOg_U1->din2(window_val_0_0_reg_1056);
    doConv_mac_muladdeOg_U1->dout(grp_fu_795_p3);
    doConv_mac_muladdeOg_U2 = new doConv_mac_muladdeOg<1,1,8,8,16,16>("doConv_mac_muladdeOg_U2");
    doConv_mac_muladdeOg_U2->din0(grp_fu_802_p0);
    doConv_mac_muladdeOg_U2->din1(grp_fu_802_p1);
    doConv_mac_muladdeOg_U2->din2(grp_fu_802_p2);
    doConv_mac_muladdeOg_U2->dout(grp_fu_802_p3);
    doConv_mac_muladdeOg_U3 = new doConv_mac_muladdeOg<1,1,8,8,16,16>("doConv_mac_muladdeOg_U3");
    doConv_mac_muladdeOg_U3->din0(grp_fu_810_p0);
    doConv_mac_muladdeOg_U3->din1(grp_fu_810_p1);
    doConv_mac_muladdeOg_U3->din2(window_val_2_2_reg_1101);
    doConv_mac_muladdeOg_U3->dout(grp_fu_810_p3);
    doConv_mac_muladdeOg_U4 = new doConv_mac_muladdeOg<1,1,8,8,16,16>("doConv_mac_muladdeOg_U4");
    doConv_mac_muladdeOg_U4->din0(grp_fu_816_p0);
    doConv_mac_muladdeOg_U4->din1(grp_fu_816_p1);
    doConv_mac_muladdeOg_U4->din2(window_val_1_1_reg_1071);
    doConv_mac_muladdeOg_U4->dout(grp_fu_816_p3);
    doConv_mac_muladdfYi_U5 = new doConv_mac_muladdfYi<1,1,8,8,16,16>("doConv_mac_muladdfYi_U5");
    doConv_mac_muladdfYi_U5->din0(grp_fu_824_p0);
    doConv_mac_muladdfYi_U5->din1(grp_fu_824_p1);
    doConv_mac_muladdfYi_U5->din2(tmp15_reg_1136);
    doConv_mac_muladdfYi_U5->dout(grp_fu_824_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state16_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state17_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state18_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_334);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( or_cond6_reg_990 );

    SC_METHOD(thread_ap_condition_353);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state11);
    sensitive << ( exitcond4_fu_445_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( exitcond1_fu_745_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_col_assign_phi_fu_383_p4);
    sensitive << ( col_assign_reg_379 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( idxCol_1_reg_1051 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxRow_phi_fu_372_p4);
    sensitive << ( idxRow_reg_368 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( idxRow_1_reg_1006 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_idxpixel_phi_fu_337_p4);
    sensitive << ( idxpixel_reg_333 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( idxpixel_1_reg_965 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_pixConvolved_phi_fu_360_p4);
    sensitive << ( pixConvolved_reg_356 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( pixConvolved_1_reg_1046 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( exitcond1_fu_745_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_col_1_fu_775_p2);
    sensitive << ( col_reg_401 );

    SC_METHOD(thread_col_assign_1_0_2_fu_598_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_360_p4 );

    SC_METHOD(thread_exitcond1_fu_745_p2);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( row_reg_390 );

    SC_METHOD(thread_exitcond4_fu_445_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_idxpixel_phi_fu_337_p4 );

    SC_METHOD(thread_exitcond_fu_769_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( col_reg_401 );

    SC_METHOD(thread_grp_fu_795_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( tmp_24_0_1_reg_921 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_795_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( grp_fu_795_p10 );

    SC_METHOD(thread_grp_fu_795_p10);
    sensitive << ( reg_412 );

    SC_METHOD(thread_grp_fu_802_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( tmp_24_2_reg_946 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_grp_fu_802_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( grp_fu_802_p10 );

    SC_METHOD(thread_grp_fu_802_p10);
    sensitive << ( lineBuff_val_2_load_1_reg_1081 );

    SC_METHOD(thread_grp_fu_802_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( window_val_2_1_fu_651_p0 );
    sensitive << ( window_val_2_1_fu_651_p1 );

    SC_METHOD(thread_grp_fu_810_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( tmp_24_0_2_reg_926 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_810_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( grp_fu_810_p10 );

    SC_METHOD(thread_grp_fu_810_p10);
    sensitive << ( reg_412 );

    SC_METHOD(thread_grp_fu_816_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( tmp_24_1_2_reg_941 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_816_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( grp_fu_816_p10 );

    SC_METHOD(thread_grp_fu_816_p10);
    sensitive << ( lineBuff_val_1_load_3_reg_1096 );

    SC_METHOD(thread_grp_fu_824_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( tmp_24_1_reg_931 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_824_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond4_reg_961_pp0_iter1_reg );
    sensitive << ( or_cond6_reg_990_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_fu_824_p10 );

    SC_METHOD(thread_grp_fu_824_p10);
    sensitive << ( lineBuff_val_1_load_1_reg_1066 );

    SC_METHOD(thread_icmp3_fu_516_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond4_fu_445_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_10_fu_506_p4 );

    SC_METHOD(thread_icmp_fu_500_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond4_fu_445_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_9_fu_490_p4 );

    SC_METHOD(thread_idxCol_1_fu_611_p3);
    sensitive << ( tmp_3_reg_995 );
    sensitive << ( idxCol_reg_1001 );

    SC_METHOD(thread_idxCol_fu_558_p2);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_383_p4 );

    SC_METHOD(thread_idxRow_1_fu_570_p3);
    sensitive << ( tmp_3_fu_552_p2 );
    sensitive << ( ap_phi_mux_idxRow_phi_fu_372_p4 );
    sensitive << ( idxRow_2_fu_564_p2 );

    SC_METHOD(thread_idxRow_2_fu_564_p2);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_372_p4 );

    SC_METHOD(thread_idxpixel_1_fu_451_p2);
    sensitive << ( ap_phi_mux_idxpixel_phi_fu_337_p4 );

    SC_METHOD(thread_input_image_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_15_cast_fu_485_p1 );

    SC_METHOD(thread_input_image_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_lineBuff_val_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_reg_970 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_11_fu_578_p1 );
    sensitive << ( tmp_20_0_2_fu_626_p1 );

    SC_METHOD(thread_lineBuff_val_0_address1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_20_0_1_fu_591_p1 );

    SC_METHOD(thread_lineBuff_val_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_ce1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_0_we0);
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_lineBuff_val_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_fu_457_p1 );
    sensitive << ( lineBuff_val_1_addr_reg_980 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_20_0_1_fu_591_p1 );

    SC_METHOD(thread_lineBuff_val_1_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_11_fu_578_p1 );
    sensitive << ( tmp_20_0_2_fu_626_p1 );

    SC_METHOD(thread_lineBuff_val_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_1_we0);
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_lineBuff_val_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_8_fu_457_p1 );
    sensitive << ( lineBuff_val_2_addr_reg_985 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_20_0_1_fu_591_p1 );

    SC_METHOD(thread_lineBuff_val_2_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_11_fu_578_p1 );
    sensitive << ( tmp_20_0_2_fu_626_p1 );

    SC_METHOD(thread_lineBuff_val_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_2_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );

    SC_METHOD(thread_lineBuff_val_2_we0);
    sensitive << ( exitcond4_reg_961 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_or_cond6_fu_546_p2);
    sensitive << ( tmp2_fu_540_p2 );
    sensitive << ( tmp1_fu_534_p2 );

    SC_METHOD(thread_output_image_address0);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_22_cast_fu_790_p1 );

    SC_METHOD(thread_output_image_ce0);
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_output_image_d0);
    sensitive << ( tmp_reg_1156 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_output_image_we0);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( exitcond_fu_769_p2 );

    SC_METHOD(thread_p_cast_fu_730_p1);
    sensitive << ( p_s_fu_722_p3 );

    SC_METHOD(thread_p_s_fu_722_p3);
    sensitive << ( tmp_18_fu_714_p3 );
    sensitive << ( valOutput_1_cast_fu_709_p2 );

    SC_METHOD(thread_pixConvolved_1_fu_604_p3);
    sensitive << ( tmp_3_reg_995 );
    sensitive << ( pixConvolved_2_fu_585_p2 );

    SC_METHOD(thread_pixConvolved_2_fu_585_p2);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_360_p4 );

    SC_METHOD(thread_row_1_fu_751_p2);
    sensitive << ( row_reg_390 );

    SC_METHOD(thread_tmp12_fu_696_p2);
    sensitive << ( tmp13_reg_1116 );
    sensitive << ( tmp14_reg_1141 );

    SC_METHOD(thread_tmp1_fu_534_p2);
    sensitive << ( icmp_fu_500_p2 );
    sensitive << ( icmp3_fu_516_p2 );

    SC_METHOD(thread_tmp2_fu_540_p2);
    sensitive << ( tmp_6_fu_522_p2 );
    sensitive << ( tmp_7_fu_528_p2 );

    SC_METHOD(thread_tmp9_fu_681_p2);
    sensitive << ( tmp3_reg_1106 );
    sensitive << ( grp_fu_816_p3 );

    SC_METHOD(thread_tmp_10_cast_fu_781_p1);
    sensitive << ( col_reg_401 );

    SC_METHOD(thread_tmp_10_fu_506_p4);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_383_p4 );

    SC_METHOD(thread_tmp_11_cast_fu_471_p3);
    sensitive << ( tmp_5_fu_467_p1 );

    SC_METHOD(thread_tmp_11_fu_578_p1);
    sensitive << ( ap_phi_mux_pixConvolved_phi_fu_360_p4 );

    SC_METHOD(thread_tmp_12_fu_678_p1);
    sensitive << ( grp_fu_816_p3 );

    SC_METHOD(thread_tmp_13_fu_665_p1);
    sensitive << ( grp_fu_802_p3 );

    SC_METHOD(thread_tmp_14_fu_700_p2);
    sensitive << ( tmp_13_reg_1111 );
    sensitive << ( tmp_12_reg_1126 );

    SC_METHOD(thread_tmp_15_cast_fu_485_p1);
    sensitive << ( tmp_s_fu_479_p2 );

    SC_METHOD(thread_tmp_15_fu_691_p2);
    sensitive << ( tmp_17_reg_1121 );
    sensitive << ( tmp_16_fu_688_p1 );

    SC_METHOD(thread_tmp_16_fu_688_p1);
    sensitive << ( grp_fu_824_p3 );

    SC_METHOD(thread_tmp_17_fu_668_p1);
    sensitive << ( grp_fu_795_p3 );

    SC_METHOD(thread_tmp_18_fu_714_p3);
    sensitive << ( valOutput_1_fu_704_p2 );

    SC_METHOD(thread_tmp_19_fu_757_p3);
    sensitive << ( row_reg_390 );

    SC_METHOD(thread_tmp_20_0_1_fu_591_p1);
    sensitive << ( pixConvolved_2_fu_585_p2 );

    SC_METHOD(thread_tmp_20_0_2_fu_626_p1);
    sensitive << ( col_assign_1_0_2_reg_1021 );

    SC_METHOD(thread_tmp_20_fu_785_p2);
    sensitive << ( tmp_21_cast_reg_1169 );
    sensitive << ( tmp_10_cast_fu_781_p1 );

    SC_METHOD(thread_tmp_21_cast_fu_765_p1);
    sensitive << ( tmp_19_fu_757_p3 );

    SC_METHOD(thread_tmp_22_cast_fu_790_p1);
    sensitive << ( tmp_20_fu_785_p2 );

    SC_METHOD(thread_tmp_24_0_1_fu_420_p1);
    sensitive << ( kernel_load_1_reg_846 );

    SC_METHOD(thread_tmp_24_0_2_fu_423_p1);
    sensitive << ( kernel_load_2_reg_856 );

    SC_METHOD(thread_tmp_24_1_1_fu_429_p1);
    sensitive << ( kernel_load_4_reg_876 );

    SC_METHOD(thread_tmp_24_1_2_fu_432_p1);
    sensitive << ( kernel_load_5_reg_886 );

    SC_METHOD(thread_tmp_24_1_fu_426_p1);
    sensitive << ( kernel_load_3_reg_866 );

    SC_METHOD(thread_tmp_24_2_1_fu_438_p1);
    sensitive << ( kernel_load_7_reg_906 );

    SC_METHOD(thread_tmp_24_2_2_fu_441_p1);
    sensitive << ( kernel_q0 );

    SC_METHOD(thread_tmp_24_2_fu_435_p1);
    sensitive << ( kernel_load_6_reg_896 );

    SC_METHOD(thread_tmp_2_fu_417_p1);
    sensitive << ( kernel_load_reg_836 );

    SC_METHOD(thread_tmp_3_fu_552_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond4_fu_445_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_383_p4 );

    SC_METHOD(thread_tmp_4_fu_463_p1);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_383_p4 );

    SC_METHOD(thread_tmp_5_fu_467_p1);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_372_p4 );

    SC_METHOD(thread_tmp_6_fu_522_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond4_fu_445_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_383_p4 );

    SC_METHOD(thread_tmp_7_fu_528_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond4_fu_445_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_idxRow_phi_fu_372_p4 );

    SC_METHOD(thread_tmp_8_fu_457_p1);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_383_p4 );

    SC_METHOD(thread_tmp_9_fu_490_p4);
    sensitive << ( ap_phi_mux_idxRow_phi_fu_372_p4 );

    SC_METHOD(thread_tmp_fu_741_p1);
    sensitive << ( valOutput_reg_344 );

    SC_METHOD(thread_tmp_s_fu_479_p2);
    sensitive << ( tmp_11_cast_fu_471_p3 );
    sensitive << ( tmp_4_fu_463_p1 );

    SC_METHOD(thread_valOutput_1_cast_fu_709_p2);
    sensitive << ( tmp_15_reg_1146 );
    sensitive << ( tmp_14_fu_700_p2 );

    SC_METHOD(thread_valOutput_1_fu_704_p2);
    sensitive << ( tmp9_reg_1131 );
    sensitive << ( tmp12_fu_696_p2 );

    SC_METHOD(thread_valOutput_2_fu_734_p3);
    sensitive << ( valOutput_reg_344 );
    sensitive << ( or_cond6_reg_990_pp0_iter2_reg );
    sensitive << ( p_cast_fu_730_p1 );

    SC_METHOD(thread_window_val_0_0_fu_621_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_2_reg_916 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_window_val_0_0_fu_621_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( window_val_0_0_fu_621_p10 );

    SC_METHOD(thread_window_val_0_0_fu_621_p10);
    sensitive << ( lineBuff_val_0_q0 );

    SC_METHOD(thread_window_val_0_0_fu_621_p2);
    sensitive << ( window_val_0_0_fu_621_p0 );
    sensitive << ( window_val_0_0_fu_621_p1 );

    SC_METHOD(thread_window_val_1_1_fu_636_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_24_1_1_reg_936 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_window_val_1_1_fu_636_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( window_val_1_1_fu_636_p10 );

    SC_METHOD(thread_window_val_1_1_fu_636_p10);
    sensitive << ( lineBuff_val_1_q0 );

    SC_METHOD(thread_window_val_1_1_fu_636_p2);
    sensitive << ( window_val_1_1_fu_636_p0 );
    sensitive << ( window_val_1_1_fu_636_p1 );

    SC_METHOD(thread_window_val_2_1_fu_651_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_24_2_1_reg_951 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_window_val_2_1_fu_651_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( window_val_2_1_fu_651_p10 );

    SC_METHOD(thread_window_val_2_1_fu_651_p10);
    sensitive << ( lineBuff_val_2_load_2_reg_1086 );

    SC_METHOD(thread_window_val_2_2_fu_660_p0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_24_2_2_reg_956 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_window_val_2_2_fu_660_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( window_val_2_2_fu_660_p10 );

    SC_METHOD(thread_window_val_2_2_fu_660_p10);
    sensitive << ( lineBuff_val_2_q1 );

    SC_METHOD(thread_window_val_2_2_fu_660_p2);
    sensitive << ( window_val_2_2_fu_660_p0 );
    sensitive << ( window_val_2_2_fu_660_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( exitcond4_fu_445_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( exitcond1_fu_745_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( exitcond_fu_769_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "doConv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_image_address0, "(port)input_image_address0");
    sc_trace(mVcdFile, input_image_ce0, "(port)input_image_ce0");
    sc_trace(mVcdFile, input_image_q0, "(port)input_image_q0");
    sc_trace(mVcdFile, output_image_address0, "(port)output_image_address0");
    sc_trace(mVcdFile, output_image_ce0, "(port)output_image_ce0");
    sc_trace(mVcdFile, output_image_we0, "(port)output_image_we0");
    sc_trace(mVcdFile, output_image_d0, "(port)output_image_d0");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWVALID, "(port)s_axi_CTRL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWREADY, "(port)s_axi_CTRL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_AWADDR, "(port)s_axi_CTRL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WVALID, "(port)s_axi_CTRL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WREADY, "(port)s_axi_CTRL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WDATA, "(port)s_axi_CTRL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_WSTRB, "(port)s_axi_CTRL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARVALID, "(port)s_axi_CTRL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARREADY, "(port)s_axi_CTRL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_ARADDR, "(port)s_axi_CTRL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RVALID, "(port)s_axi_CTRL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RREADY, "(port)s_axi_CTRL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RDATA, "(port)s_axi_CTRL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_RRESP, "(port)s_axi_CTRL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BVALID, "(port)s_axi_CTRL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BREADY, "(port)s_axi_CTRL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CTRL_BUS_BRESP, "(port)s_axi_CTRL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_AWVALID, "(port)s_axi_KERNEL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_AWREADY, "(port)s_axi_KERNEL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_AWADDR, "(port)s_axi_KERNEL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WVALID, "(port)s_axi_KERNEL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WREADY, "(port)s_axi_KERNEL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WDATA, "(port)s_axi_KERNEL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_WSTRB, "(port)s_axi_KERNEL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_ARVALID, "(port)s_axi_KERNEL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_ARREADY, "(port)s_axi_KERNEL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_ARADDR, "(port)s_axi_KERNEL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RVALID, "(port)s_axi_KERNEL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RREADY, "(port)s_axi_KERNEL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RDATA, "(port)s_axi_KERNEL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_RRESP, "(port)s_axi_KERNEL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_BVALID, "(port)s_axi_KERNEL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_BREADY, "(port)s_axi_KERNEL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_KERNEL_BUS_BRESP, "(port)s_axi_KERNEL_BUS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, kernel_address0, "kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "kernel_q0");
    sc_trace(mVcdFile, idxpixel_reg_333, "idxpixel_reg_333");
    sc_trace(mVcdFile, valOutput_reg_344, "valOutput_reg_344");
    sc_trace(mVcdFile, pixConvolved_reg_356, "pixConvolved_reg_356");
    sc_trace(mVcdFile, idxRow_reg_368, "idxRow_reg_368");
    sc_trace(mVcdFile, col_assign_reg_379, "col_assign_reg_379");
    sc_trace(mVcdFile, lineBuff_val_0_q1, "lineBuff_val_0_q1");
    sc_trace(mVcdFile, reg_412, "reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter0, "ap_block_state11_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter1, "ap_block_state14_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage0_iter2, "ap_block_state17_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond4_reg_961, "exitcond4_reg_961");
    sc_trace(mVcdFile, or_cond6_reg_990, "or_cond6_reg_990");
    sc_trace(mVcdFile, lineBuff_val_0_q0, "lineBuff_val_0_q0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage1_iter0, "ap_block_state12_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter1, "ap_block_state15_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage1_iter2, "ap_block_state18_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, exitcond4_reg_961_pp0_iter1_reg, "exitcond4_reg_961_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond6_reg_990_pp0_iter1_reg, "or_cond6_reg_990_pp0_iter1_reg");
    sc_trace(mVcdFile, kernel_load_reg_836, "kernel_load_reg_836");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, kernel_load_1_reg_846, "kernel_load_1_reg_846");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, kernel_load_2_reg_856, "kernel_load_2_reg_856");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, kernel_load_3_reg_866, "kernel_load_3_reg_866");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, kernel_load_4_reg_876, "kernel_load_4_reg_876");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, kernel_load_5_reg_886, "kernel_load_5_reg_886");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, kernel_load_6_reg_896, "kernel_load_6_reg_896");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, kernel_load_7_reg_906, "kernel_load_7_reg_906");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_2_fu_417_p1, "tmp_2_fu_417_p1");
    sc_trace(mVcdFile, tmp_2_reg_916, "tmp_2_reg_916");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_24_0_1_fu_420_p1, "tmp_24_0_1_fu_420_p1");
    sc_trace(mVcdFile, tmp_24_0_1_reg_921, "tmp_24_0_1_reg_921");
    sc_trace(mVcdFile, tmp_24_0_2_fu_423_p1, "tmp_24_0_2_fu_423_p1");
    sc_trace(mVcdFile, tmp_24_0_2_reg_926, "tmp_24_0_2_reg_926");
    sc_trace(mVcdFile, tmp_24_1_fu_426_p1, "tmp_24_1_fu_426_p1");
    sc_trace(mVcdFile, tmp_24_1_reg_931, "tmp_24_1_reg_931");
    sc_trace(mVcdFile, tmp_24_1_1_fu_429_p1, "tmp_24_1_1_fu_429_p1");
    sc_trace(mVcdFile, tmp_24_1_1_reg_936, "tmp_24_1_1_reg_936");
    sc_trace(mVcdFile, tmp_24_1_2_fu_432_p1, "tmp_24_1_2_fu_432_p1");
    sc_trace(mVcdFile, tmp_24_1_2_reg_941, "tmp_24_1_2_reg_941");
    sc_trace(mVcdFile, tmp_24_2_fu_435_p1, "tmp_24_2_fu_435_p1");
    sc_trace(mVcdFile, tmp_24_2_reg_946, "tmp_24_2_reg_946");
    sc_trace(mVcdFile, tmp_24_2_1_fu_438_p1, "tmp_24_2_1_fu_438_p1");
    sc_trace(mVcdFile, tmp_24_2_1_reg_951, "tmp_24_2_1_reg_951");
    sc_trace(mVcdFile, tmp_24_2_2_fu_441_p1, "tmp_24_2_2_fu_441_p1");
    sc_trace(mVcdFile, tmp_24_2_2_reg_956, "tmp_24_2_2_reg_956");
    sc_trace(mVcdFile, exitcond4_fu_445_p2, "exitcond4_fu_445_p2");
    sc_trace(mVcdFile, exitcond4_reg_961_pp0_iter2_reg, "exitcond4_reg_961_pp0_iter2_reg");
    sc_trace(mVcdFile, idxpixel_1_fu_451_p2, "idxpixel_1_fu_451_p2");
    sc_trace(mVcdFile, idxpixel_1_reg_965, "idxpixel_1_reg_965");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_8_fu_457_p1, "tmp_8_fu_457_p1");
    sc_trace(mVcdFile, tmp_8_reg_970, "tmp_8_reg_970");
    sc_trace(mVcdFile, lineBuff_val_1_addr_reg_980, "lineBuff_val_1_addr_reg_980");
    sc_trace(mVcdFile, lineBuff_val_2_addr_reg_985, "lineBuff_val_2_addr_reg_985");
    sc_trace(mVcdFile, or_cond6_fu_546_p2, "or_cond6_fu_546_p2");
    sc_trace(mVcdFile, or_cond6_reg_990_pp0_iter2_reg, "or_cond6_reg_990_pp0_iter2_reg");
    sc_trace(mVcdFile, tmp_3_fu_552_p2, "tmp_3_fu_552_p2");
    sc_trace(mVcdFile, tmp_3_reg_995, "tmp_3_reg_995");
    sc_trace(mVcdFile, idxCol_fu_558_p2, "idxCol_fu_558_p2");
    sc_trace(mVcdFile, idxCol_reg_1001, "idxCol_reg_1001");
    sc_trace(mVcdFile, idxRow_1_fu_570_p3, "idxRow_1_fu_570_p3");
    sc_trace(mVcdFile, idxRow_1_reg_1006, "idxRow_1_reg_1006");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage2_iter0, "ap_block_state13_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage2_iter1, "ap_block_state16_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, col_assign_1_0_2_fu_598_p2, "col_assign_1_0_2_fu_598_p2");
    sc_trace(mVcdFile, col_assign_1_0_2_reg_1021, "col_assign_1_0_2_reg_1021");
    sc_trace(mVcdFile, pixConvolved_1_fu_604_p3, "pixConvolved_1_fu_604_p3");
    sc_trace(mVcdFile, pixConvolved_1_reg_1046, "pixConvolved_1_reg_1046");
    sc_trace(mVcdFile, idxCol_1_fu_611_p3, "idxCol_1_fu_611_p3");
    sc_trace(mVcdFile, idxCol_1_reg_1051, "idxCol_1_reg_1051");
    sc_trace(mVcdFile, window_val_0_0_fu_621_p2, "window_val_0_0_fu_621_p2");
    sc_trace(mVcdFile, window_val_0_0_reg_1056, "window_val_0_0_reg_1056");
    sc_trace(mVcdFile, lineBuff_val_1_q1, "lineBuff_val_1_q1");
    sc_trace(mVcdFile, lineBuff_val_1_load_1_reg_1066, "lineBuff_val_1_load_1_reg_1066");
    sc_trace(mVcdFile, window_val_1_1_fu_636_p2, "window_val_1_1_fu_636_p2");
    sc_trace(mVcdFile, window_val_1_1_reg_1071, "window_val_1_1_reg_1071");
    sc_trace(mVcdFile, lineBuff_val_2_q1, "lineBuff_val_2_q1");
    sc_trace(mVcdFile, lineBuff_val_2_load_1_reg_1081, "lineBuff_val_2_load_1_reg_1081");
    sc_trace(mVcdFile, lineBuff_val_2_q0, "lineBuff_val_2_q0");
    sc_trace(mVcdFile, lineBuff_val_2_load_2_reg_1086, "lineBuff_val_2_load_2_reg_1086");
    sc_trace(mVcdFile, lineBuff_val_1_load_3_reg_1096, "lineBuff_val_1_load_3_reg_1096");
    sc_trace(mVcdFile, window_val_2_2_fu_660_p2, "window_val_2_2_fu_660_p2");
    sc_trace(mVcdFile, window_val_2_2_reg_1101, "window_val_2_2_reg_1101");
    sc_trace(mVcdFile, grp_fu_802_p3, "grp_fu_802_p3");
    sc_trace(mVcdFile, tmp3_reg_1106, "tmp3_reg_1106");
    sc_trace(mVcdFile, tmp_13_fu_665_p1, "tmp_13_fu_665_p1");
    sc_trace(mVcdFile, tmp_13_reg_1111, "tmp_13_reg_1111");
    sc_trace(mVcdFile, grp_fu_795_p3, "grp_fu_795_p3");
    sc_trace(mVcdFile, tmp13_reg_1116, "tmp13_reg_1116");
    sc_trace(mVcdFile, tmp_17_fu_668_p1, "tmp_17_fu_668_p1");
    sc_trace(mVcdFile, tmp_17_reg_1121, "tmp_17_reg_1121");
    sc_trace(mVcdFile, tmp_12_fu_678_p1, "tmp_12_fu_678_p1");
    sc_trace(mVcdFile, tmp_12_reg_1126, "tmp_12_reg_1126");
    sc_trace(mVcdFile, tmp9_fu_681_p2, "tmp9_fu_681_p2");
    sc_trace(mVcdFile, tmp9_reg_1131, "tmp9_reg_1131");
    sc_trace(mVcdFile, grp_fu_810_p3, "grp_fu_810_p3");
    sc_trace(mVcdFile, tmp15_reg_1136, "tmp15_reg_1136");
    sc_trace(mVcdFile, grp_fu_824_p3, "grp_fu_824_p3");
    sc_trace(mVcdFile, tmp14_reg_1141, "tmp14_reg_1141");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, tmp_15_fu_691_p2, "tmp_15_fu_691_p2");
    sc_trace(mVcdFile, tmp_15_reg_1146, "tmp_15_reg_1146");
    sc_trace(mVcdFile, valOutput_2_fu_734_p3, "valOutput_2_fu_734_p3");
    sc_trace(mVcdFile, tmp_fu_741_p1, "tmp_fu_741_p1");
    sc_trace(mVcdFile, tmp_reg_1156, "tmp_reg_1156");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, row_1_fu_751_p2, "row_1_fu_751_p2");
    sc_trace(mVcdFile, row_1_reg_1164, "row_1_reg_1164");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_21_cast_fu_765_p1, "tmp_21_cast_fu_765_p1");
    sc_trace(mVcdFile, tmp_21_cast_reg_1169, "tmp_21_cast_reg_1169");
    sc_trace(mVcdFile, exitcond1_fu_745_p2, "exitcond1_fu_745_p2");
    sc_trace(mVcdFile, col_1_fu_775_p2, "col_1_fu_775_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state11, "ap_condition_pp0_exit_iter0_state11");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, lineBuff_val_0_address0, "lineBuff_val_0_address0");
    sc_trace(mVcdFile, lineBuff_val_0_ce0, "lineBuff_val_0_ce0");
    sc_trace(mVcdFile, lineBuff_val_0_we0, "lineBuff_val_0_we0");
    sc_trace(mVcdFile, lineBuff_val_0_address1, "lineBuff_val_0_address1");
    sc_trace(mVcdFile, lineBuff_val_0_ce1, "lineBuff_val_0_ce1");
    sc_trace(mVcdFile, lineBuff_val_1_address0, "lineBuff_val_1_address0");
    sc_trace(mVcdFile, lineBuff_val_1_ce0, "lineBuff_val_1_ce0");
    sc_trace(mVcdFile, lineBuff_val_1_we0, "lineBuff_val_1_we0");
    sc_trace(mVcdFile, lineBuff_val_1_q0, "lineBuff_val_1_q0");
    sc_trace(mVcdFile, lineBuff_val_1_address1, "lineBuff_val_1_address1");
    sc_trace(mVcdFile, lineBuff_val_1_ce1, "lineBuff_val_1_ce1");
    sc_trace(mVcdFile, lineBuff_val_2_address0, "lineBuff_val_2_address0");
    sc_trace(mVcdFile, lineBuff_val_2_ce0, "lineBuff_val_2_ce0");
    sc_trace(mVcdFile, lineBuff_val_2_we0, "lineBuff_val_2_we0");
    sc_trace(mVcdFile, lineBuff_val_2_address1, "lineBuff_val_2_address1");
    sc_trace(mVcdFile, lineBuff_val_2_ce1, "lineBuff_val_2_ce1");
    sc_trace(mVcdFile, ap_phi_mux_idxpixel_phi_fu_337_p4, "ap_phi_mux_idxpixel_phi_fu_337_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_pixConvolved_phi_fu_360_p4, "ap_phi_mux_pixConvolved_phi_fu_360_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_phi_mux_idxRow_phi_fu_372_p4, "ap_phi_mux_idxRow_phi_fu_372_p4");
    sc_trace(mVcdFile, ap_phi_mux_col_assign_phi_fu_383_p4, "ap_phi_mux_col_assign_phi_fu_383_p4");
    sc_trace(mVcdFile, row_reg_390, "row_reg_390");
    sc_trace(mVcdFile, exitcond_fu_769_p2, "exitcond_fu_769_p2");
    sc_trace(mVcdFile, col_reg_401, "col_reg_401");
    sc_trace(mVcdFile, tmp_15_cast_fu_485_p1, "tmp_15_cast_fu_485_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, tmp_11_fu_578_p1, "tmp_11_fu_578_p1");
    sc_trace(mVcdFile, tmp_20_0_1_fu_591_p1, "tmp_20_0_1_fu_591_p1");
    sc_trace(mVcdFile, tmp_20_0_2_fu_626_p1, "tmp_20_0_2_fu_626_p1");
    sc_trace(mVcdFile, tmp_22_cast_fu_790_p1, "tmp_22_cast_fu_790_p1");
    sc_trace(mVcdFile, tmp_5_fu_467_p1, "tmp_5_fu_467_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_471_p3, "tmp_11_cast_fu_471_p3");
    sc_trace(mVcdFile, tmp_4_fu_463_p1, "tmp_4_fu_463_p1");
    sc_trace(mVcdFile, tmp_s_fu_479_p2, "tmp_s_fu_479_p2");
    sc_trace(mVcdFile, tmp_9_fu_490_p4, "tmp_9_fu_490_p4");
    sc_trace(mVcdFile, tmp_10_fu_506_p4, "tmp_10_fu_506_p4");
    sc_trace(mVcdFile, icmp_fu_500_p2, "icmp_fu_500_p2");
    sc_trace(mVcdFile, icmp3_fu_516_p2, "icmp3_fu_516_p2");
    sc_trace(mVcdFile, tmp_6_fu_522_p2, "tmp_6_fu_522_p2");
    sc_trace(mVcdFile, tmp_7_fu_528_p2, "tmp_7_fu_528_p2");
    sc_trace(mVcdFile, tmp2_fu_540_p2, "tmp2_fu_540_p2");
    sc_trace(mVcdFile, tmp1_fu_534_p2, "tmp1_fu_534_p2");
    sc_trace(mVcdFile, idxRow_2_fu_564_p2, "idxRow_2_fu_564_p2");
    sc_trace(mVcdFile, pixConvolved_2_fu_585_p2, "pixConvolved_2_fu_585_p2");
    sc_trace(mVcdFile, window_val_0_0_fu_621_p0, "window_val_0_0_fu_621_p0");
    sc_trace(mVcdFile, window_val_0_0_fu_621_p1, "window_val_0_0_fu_621_p1");
    sc_trace(mVcdFile, window_val_1_1_fu_636_p0, "window_val_1_1_fu_636_p0");
    sc_trace(mVcdFile, window_val_1_1_fu_636_p1, "window_val_1_1_fu_636_p1");
    sc_trace(mVcdFile, window_val_2_1_fu_651_p0, "window_val_2_1_fu_651_p0");
    sc_trace(mVcdFile, window_val_2_1_fu_651_p1, "window_val_2_1_fu_651_p1");
    sc_trace(mVcdFile, window_val_2_2_fu_660_p0, "window_val_2_2_fu_660_p0");
    sc_trace(mVcdFile, window_val_2_2_fu_660_p1, "window_val_2_2_fu_660_p1");
    sc_trace(mVcdFile, grp_fu_816_p3, "grp_fu_816_p3");
    sc_trace(mVcdFile, tmp_16_fu_688_p1, "tmp_16_fu_688_p1");
    sc_trace(mVcdFile, tmp12_fu_696_p2, "tmp12_fu_696_p2");
    sc_trace(mVcdFile, tmp_14_fu_700_p2, "tmp_14_fu_700_p2");
    sc_trace(mVcdFile, valOutput_1_fu_704_p2, "valOutput_1_fu_704_p2");
    sc_trace(mVcdFile, tmp_18_fu_714_p3, "tmp_18_fu_714_p3");
    sc_trace(mVcdFile, valOutput_1_cast_fu_709_p2, "valOutput_1_cast_fu_709_p2");
    sc_trace(mVcdFile, p_s_fu_722_p3, "p_s_fu_722_p3");
    sc_trace(mVcdFile, p_cast_fu_730_p1, "p_cast_fu_730_p1");
    sc_trace(mVcdFile, tmp_19_fu_757_p3, "tmp_19_fu_757_p3");
    sc_trace(mVcdFile, tmp_10_cast_fu_781_p1, "tmp_10_cast_fu_781_p1");
    sc_trace(mVcdFile, tmp_20_fu_785_p2, "tmp_20_fu_785_p2");
    sc_trace(mVcdFile, grp_fu_795_p0, "grp_fu_795_p0");
    sc_trace(mVcdFile, grp_fu_795_p1, "grp_fu_795_p1");
    sc_trace(mVcdFile, grp_fu_802_p0, "grp_fu_802_p0");
    sc_trace(mVcdFile, grp_fu_802_p1, "grp_fu_802_p1");
    sc_trace(mVcdFile, grp_fu_802_p2, "grp_fu_802_p2");
    sc_trace(mVcdFile, grp_fu_810_p0, "grp_fu_810_p0");
    sc_trace(mVcdFile, grp_fu_810_p1, "grp_fu_810_p1");
    sc_trace(mVcdFile, grp_fu_816_p0, "grp_fu_816_p0");
    sc_trace(mVcdFile, grp_fu_816_p1, "grp_fu_816_p1");
    sc_trace(mVcdFile, grp_fu_824_p0, "grp_fu_824_p0");
    sc_trace(mVcdFile, grp_fu_824_p1, "grp_fu_824_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_795_p10, "grp_fu_795_p10");
    sc_trace(mVcdFile, grp_fu_802_p10, "grp_fu_802_p10");
    sc_trace(mVcdFile, grp_fu_810_p10, "grp_fu_810_p10");
    sc_trace(mVcdFile, grp_fu_816_p10, "grp_fu_816_p10");
    sc_trace(mVcdFile, grp_fu_824_p10, "grp_fu_824_p10");
    sc_trace(mVcdFile, window_val_0_0_fu_621_p10, "window_val_0_0_fu_621_p10");
    sc_trace(mVcdFile, window_val_1_1_fu_636_p10, "window_val_1_1_fu_636_p10");
    sc_trace(mVcdFile, window_val_2_1_fu_651_p10, "window_val_2_1_fu_651_p10");
    sc_trace(mVcdFile, window_val_2_2_fu_660_p10, "window_val_2_2_fu_660_p10");
    sc_trace(mVcdFile, ap_condition_334, "ap_condition_334");
    sc_trace(mVcdFile, ap_condition_353, "ap_condition_353");
#endif

    }
    mHdltvinHandle.open("doConv.hdltvin.dat");
    mHdltvoutHandle.open("doConv.hdltvout.dat");
}

doConv::~doConv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete doConv_CTRL_BUS_s_axi_U;
    delete doConv_KERNEL_BUS_s_axi_U;
    delete lineBuff_val_0_U;
    delete lineBuff_val_1_U;
    delete lineBuff_val_2_U;
    delete doConv_mac_muladdeOg_U1;
    delete doConv_mac_muladdeOg_U2;
    delete doConv_mac_muladdeOg_U3;
    delete doConv_mac_muladdeOg_U4;
    delete doConv_mac_muladdfYi_U5;
}

void doConv::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void doConv::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()))) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state11.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state11.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read())) || 
             (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read())))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0))) {
        col_assign_reg_379 = idxCol_1_reg_1051.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        col_assign_reg_379 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_745_p2.read(), ap_const_lv1_0))) {
        col_reg_401 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
                esl_seteq<1,1,1>(exitcond_fu_769_p2.read(), ap_const_lv1_0))) {
        col_reg_401 = col_1_fu_775_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0))) {
        idxRow_reg_368 = idxRow_1_reg_1006.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        idxRow_reg_368 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0))) {
        idxpixel_reg_333 = idxpixel_1_reg_965.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        idxpixel_reg_333 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        pixConvolved_reg_356 = pixConvolved_1_reg_1046.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        pixConvolved_reg_356 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) {
        if (esl_seteq<1,1,1>(ap_condition_353.read(), ap_const_boolean_1)) {
            reg_412 = lineBuff_val_0_q0.read();
        } else if (esl_seteq<1,1,1>(ap_condition_334.read(), ap_const_boolean_1)) {
            reg_412 = lineBuff_val_0_q1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_769_p2.read(), ap_const_lv1_1))) {
        row_reg_390 = row_1_reg_1164.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        row_reg_390 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter2_reg.read()))) {
        valOutput_reg_344 = valOutput_2_fu_734_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        valOutput_reg_344 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond6_reg_990.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        col_assign_1_0_2_reg_1021 = col_assign_1_0_2_fu_598_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond4_reg_961 = exitcond4_fu_445_p2.read();
        exitcond4_reg_961_pp0_iter1_reg = exitcond4_reg_961.read();
        exitcond4_reg_961_pp0_iter2_reg = exitcond4_reg_961_pp0_iter1_reg.read();
        or_cond6_reg_990_pp0_iter1_reg = or_cond6_reg_990.read();
        or_cond6_reg_990_pp0_iter2_reg = or_cond6_reg_990_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        idxCol_1_reg_1051 = idxCol_1_fu_611_p3.read();
        pixConvolved_1_reg_1046 = pixConvolved_1_fu_604_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_445_p2.read()))) {
        idxCol_reg_1001 = idxCol_fu_558_p2.read();
        lineBuff_val_1_addr_reg_980 =  (sc_lv<7>) (tmp_8_fu_457_p1.read());
        lineBuff_val_2_addr_reg_985 =  (sc_lv<7>) (tmp_8_fu_457_p1.read());
        or_cond6_reg_990 = or_cond6_fu_546_p2.read();
        tmp_3_reg_995 = tmp_3_fu_552_p2.read();
        tmp_8_reg_970 = tmp_8_fu_457_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_445_p2.read()))) {
        idxRow_1_reg_1006 = idxRow_1_fu_570_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        idxpixel_1_reg_965 = idxpixel_1_fu_451_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        kernel_load_1_reg_846 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kernel_load_2_reg_856 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        kernel_load_3_reg_866 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        kernel_load_4_reg_876 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        kernel_load_5_reg_886 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        kernel_load_6_reg_896 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        kernel_load_7_reg_906 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        kernel_load_reg_836 = kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond6_reg_990.read(), ap_const_lv1_1))) {
        lineBuff_val_1_load_1_reg_1066 = lineBuff_val_1_q1.read();
        lineBuff_val_2_load_1_reg_1081 = lineBuff_val_2_q1.read();
        lineBuff_val_2_load_2_reg_1086 = lineBuff_val_2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()))) {
        lineBuff_val_1_load_3_reg_1096 = lineBuff_val_1_q1.read();
        tmp13_reg_1116 = grp_fu_795_p3.read();
        tmp3_reg_1106 = grp_fu_802_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        row_1_reg_1164 = row_1_fu_751_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1))) {
        tmp14_reg_1141 = grp_fu_824_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp15_reg_1136 = grp_fu_810_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp9_reg_1131 = tmp9_fu_681_p2.read();
        tmp_12_reg_1126 = tmp_12_fu_678_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()))) {
        tmp_13_reg_1111 = tmp_13_fu_665_p1.read();
        tmp_17_reg_1121 = tmp_17_fu_668_p1.read();
        window_val_2_2_reg_1101 = window_val_2_2_fu_660_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()))) {
        tmp_15_reg_1146 = tmp_15_fu_691_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(exitcond1_fu_745_p2.read(), ap_const_lv1_0))) {
        tmp_21_cast_reg_1169 = tmp_21_cast_fu_765_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_24_0_1_reg_921 = tmp_24_0_1_fu_420_p1.read();
        tmp_24_0_2_reg_926 = tmp_24_0_2_fu_423_p1.read();
        tmp_24_1_1_reg_936 = tmp_24_1_1_fu_429_p1.read();
        tmp_24_1_2_reg_941 = tmp_24_1_2_fu_432_p1.read();
        tmp_24_1_reg_931 = tmp_24_1_fu_426_p1.read();
        tmp_24_2_1_reg_951 = tmp_24_2_1_fu_438_p1.read();
        tmp_24_2_2_reg_956 = tmp_24_2_2_fu_441_p1.read();
        tmp_24_2_reg_946 = tmp_24_2_fu_435_p1.read();
        tmp_2_reg_916 = tmp_2_fu_417_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_reg_1156 = tmp_fu_741_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond6_reg_990.read(), ap_const_lv1_1))) {
        window_val_0_0_reg_1056 = window_val_0_0_fu_621_p2.read();
        window_val_1_1_reg_1071 = window_val_1_1_fu_636_p2.read();
    }
}

void doConv::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[10];
}

void doConv::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[11];
}

void doConv::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[12];
}

void doConv::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void doConv::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void doConv::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[13];
}

void doConv::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void doConv::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[14];
}

void doConv::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[15];
}

void doConv::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void doConv::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void doConv::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void doConv::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void doConv::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void doConv::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void doConv::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void doConv::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state11_pp0_stage0_iter0() {
    ap_block_state11_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state12_pp0_stage1_iter0() {
    ap_block_state12_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state13_pp0_stage2_iter0() {
    ap_block_state13_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state14_pp0_stage0_iter1() {
    ap_block_state14_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state15_pp0_stage1_iter1() {
    ap_block_state15_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state16_pp0_stage2_iter1() {
    ap_block_state16_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state17_pp0_stage0_iter2() {
    ap_block_state17_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_block_state18_pp0_stage1_iter2() {
    ap_block_state18_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void doConv::thread_ap_condition_334() {
    ap_condition_334 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond6_reg_990.read(), ap_const_lv1_1));
}

void doConv::thread_ap_condition_353() {
    ap_condition_353 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond6_reg_990_pp0_iter1_reg.read()));
}

void doConv::thread_ap_condition_pp0_exit_iter0_state11() {
    if (esl_seteq<1,1,1>(exitcond4_fu_445_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state11 = ap_const_logic_0;
    }
}

void doConv::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_745_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void doConv::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void doConv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void doConv::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void doConv::thread_ap_phi_mux_col_assign_phi_fu_383_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_col_assign_phi_fu_383_p4 = idxCol_1_reg_1051.read();
    } else {
        ap_phi_mux_col_assign_phi_fu_383_p4 = col_assign_reg_379.read();
    }
}

void doConv::thread_ap_phi_mux_idxRow_phi_fu_372_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_idxRow_phi_fu_372_p4 = idxRow_1_reg_1006.read();
    } else {
        ap_phi_mux_idxRow_phi_fu_372_p4 = idxRow_reg_368.read();
    }
}

void doConv::thread_ap_phi_mux_idxpixel_phi_fu_337_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_idxpixel_phi_fu_337_p4 = idxpixel_1_reg_965.read();
    } else {
        ap_phi_mux_idxpixel_phi_fu_337_p4 = idxpixel_reg_333.read();
    }
}

void doConv::thread_ap_phi_mux_pixConvolved_phi_fu_360_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_reg_961_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        ap_phi_mux_pixConvolved_phi_fu_360_p4 = pixConvolved_1_reg_1046.read();
    } else {
        ap_phi_mux_pixConvolved_phi_fu_360_p4 = pixConvolved_reg_356.read();
    }
}

void doConv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_745_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void doConv::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void doConv::thread_col_1_fu_775_p2() {
    col_1_fu_775_p2 = (!col_reg_401.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(col_reg_401.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void doConv::thread_col_assign_1_0_2_fu_598_p2() {
    col_assign_1_0_2_fu_598_p2 = (!ap_const_lv32_2.is_01() || !ap_phi_mux_pixConvolved_phi_fu_360_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_2) + sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_360_p4.read()));
}

void doConv::thread_exitcond1_fu_745_p2() {
    exitcond1_fu_745_p2 = (!row_reg_390.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(row_reg_390.read() == ap_const_lv8_80);
}

void doConv::thread_exitcond4_fu_445_p2() {
    exitcond4_fu_445_p2 = (!ap_phi_mux_idxpixel_phi_fu_337_p4.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_idxpixel_phi_fu_337_p4.read() == ap_const_lv15_4000);
}

void doConv::thread_exitcond_fu_769_p2() {
    exitcond_fu_769_p2 = (!col_reg_401.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(col_reg_401.read() == ap_const_lv8_80);
}

void doConv::thread_grp_fu_795_p0() {
    grp_fu_795_p0 =  (sc_lv<8>) (tmp_24_0_1_reg_921.read());
}

void doConv::thread_grp_fu_795_p1() {
    grp_fu_795_p1 =  (sc_lv<8>) (grp_fu_795_p10.read());
}

void doConv::thread_grp_fu_795_p10() {
    grp_fu_795_p10 = esl_zext<16,8>(reg_412.read());
}

void doConv::thread_grp_fu_802_p0() {
    grp_fu_802_p0 =  (sc_lv<8>) (tmp_24_2_reg_946.read());
}

void doConv::thread_grp_fu_802_p1() {
    grp_fu_802_p1 =  (sc_lv<8>) (grp_fu_802_p10.read());
}

void doConv::thread_grp_fu_802_p10() {
    grp_fu_802_p10 = esl_zext<16,8>(lineBuff_val_2_load_1_reg_1081.read());
}

void doConv::thread_grp_fu_802_p2() {
    grp_fu_802_p2 = (!window_val_2_1_fu_651_p0.read().is_01() || !window_val_2_1_fu_651_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_1_fu_651_p0.read()) * sc_biguint<8>(window_val_2_1_fu_651_p1.read());
}

void doConv::thread_grp_fu_810_p0() {
    grp_fu_810_p0 =  (sc_lv<8>) (tmp_24_0_2_reg_926.read());
}

void doConv::thread_grp_fu_810_p1() {
    grp_fu_810_p1 =  (sc_lv<8>) (grp_fu_810_p10.read());
}

void doConv::thread_grp_fu_810_p10() {
    grp_fu_810_p10 = esl_zext<16,8>(reg_412.read());
}

void doConv::thread_grp_fu_816_p0() {
    grp_fu_816_p0 =  (sc_lv<8>) (tmp_24_1_2_reg_941.read());
}

void doConv::thread_grp_fu_816_p1() {
    grp_fu_816_p1 =  (sc_lv<8>) (grp_fu_816_p10.read());
}

void doConv::thread_grp_fu_816_p10() {
    grp_fu_816_p10 = esl_zext<16,8>(lineBuff_val_1_load_3_reg_1096.read());
}

void doConv::thread_grp_fu_824_p0() {
    grp_fu_824_p0 =  (sc_lv<8>) (tmp_24_1_reg_931.read());
}

void doConv::thread_grp_fu_824_p1() {
    grp_fu_824_p1 =  (sc_lv<8>) (grp_fu_824_p10.read());
}

void doConv::thread_grp_fu_824_p10() {
    grp_fu_824_p10 = esl_zext<16,8>(lineBuff_val_1_load_1_reg_1066.read());
}

void doConv::thread_icmp3_fu_516_p2() {
    icmp3_fu_516_p2 = (!tmp_10_fu_506_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_10_fu_506_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void doConv::thread_icmp_fu_500_p2() {
    icmp_fu_500_p2 = (!tmp_9_fu_490_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_9_fu_490_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void doConv::thread_idxCol_1_fu_611_p3() {
    idxCol_1_fu_611_p3 = (!tmp_3_reg_995.read()[0].is_01())? sc_lv<32>(): ((tmp_3_reg_995.read()[0].to_bool())? idxCol_reg_1001.read(): ap_const_lv32_0);
}

void doConv::thread_idxCol_fu_558_p2() {
    idxCol_fu_558_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_col_assign_phi_fu_383_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_col_assign_phi_fu_383_p4.read()));
}

void doConv::thread_idxRow_1_fu_570_p3() {
    idxRow_1_fu_570_p3 = (!tmp_3_fu_552_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_3_fu_552_p2.read()[0].to_bool())? ap_phi_mux_idxRow_phi_fu_372_p4.read(): idxRow_2_fu_564_p2.read());
}

void doConv::thread_idxRow_2_fu_564_p2() {
    idxRow_2_fu_564_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_idxRow_phi_fu_372_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_idxRow_phi_fu_372_p4.read()));
}

void doConv::thread_idxpixel_1_fu_451_p2() {
    idxpixel_1_fu_451_p2 = (!ap_phi_mux_idxpixel_phi_fu_337_p4.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(ap_phi_mux_idxpixel_phi_fu_337_p4.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void doConv::thread_input_image_address0() {
    input_image_address0 =  (sc_lv<14>) (tmp_15_cast_fu_485_p1.read());
}

void doConv::thread_input_image_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        input_image_ce0 = ap_const_logic_1;
    } else {
        input_image_ce0 = ap_const_logic_0;
    }
}

void doConv::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        kernel_address0 = "XXXX";
    }
}

void doConv::thread_kernel_ce0() {
    if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        lineBuff_val_0_address0 =  (sc_lv<7>) (tmp_20_0_2_fu_626_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_0_address0 =  (sc_lv<7>) (tmp_11_fu_578_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        lineBuff_val_0_address0 =  (sc_lv<7>) (tmp_8_reg_970.read());
    } else {
        lineBuff_val_0_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void doConv::thread_lineBuff_val_0_address1() {
    lineBuff_val_0_address1 =  (sc_lv<7>) (tmp_20_0_1_fu_591_p1.read());
}

void doConv::thread_lineBuff_val_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)))) {
        lineBuff_val_0_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_ce0 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        lineBuff_val_0_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_0_ce1 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_0_we0() {
    if ((esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        lineBuff_val_0_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_0_we0 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_1_address0() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 =  (sc_lv<7>) (tmp_20_0_1_fu_591_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_980.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_1_address0 =  (sc_lv<7>) (tmp_8_fu_457_p1.read());
        } else {
            lineBuff_val_1_address0 =  (sc_lv<7>) ("XXXXXXX");
        }
    } else {
        lineBuff_val_1_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void doConv::thread_lineBuff_val_1_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        lineBuff_val_1_address1 =  (sc_lv<7>) (tmp_20_0_2_fu_626_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_1_address1 =  (sc_lv<7>) (tmp_11_fu_578_p1.read());
    } else {
        lineBuff_val_1_address1 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void doConv::thread_lineBuff_val_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)))) {
        lineBuff_val_1_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_ce0 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_1_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_1_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_1_ce1 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_1_we0() {
    if ((esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        lineBuff_val_1_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_1_we0 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_2_address0() {
    if (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 =  (sc_lv<7>) (tmp_20_0_1_fu_591_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_985.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            lineBuff_val_2_address0 =  (sc_lv<7>) (tmp_8_fu_457_p1.read());
        } else {
            lineBuff_val_2_address0 =  (sc_lv<7>) ("XXXXXXX");
        }
    } else {
        lineBuff_val_2_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void doConv::thread_lineBuff_val_2_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        lineBuff_val_2_address1 =  (sc_lv<7>) (tmp_20_0_2_fu_626_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        lineBuff_val_2_address1 =  (sc_lv<7>) (tmp_11_fu_578_p1.read());
    } else {
        lineBuff_val_2_address1 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void doConv::thread_lineBuff_val_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1)))) {
        lineBuff_val_2_ce0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_ce0 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_2_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        lineBuff_val_2_ce1 = ap_const_logic_1;
    } else {
        lineBuff_val_2_ce1 = ap_const_logic_0;
    }
}

void doConv::thread_lineBuff_val_2_we0() {
    if ((esl_seteq<1,1,1>(exitcond4_reg_961.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
        lineBuff_val_2_we0 = ap_const_logic_1;
    } else {
        lineBuff_val_2_we0 = ap_const_logic_0;
    }
}

void doConv::thread_or_cond6_fu_546_p2() {
    or_cond6_fu_546_p2 = (tmp2_fu_540_p2.read() & tmp1_fu_534_p2.read());
}

void doConv::thread_output_image_address0() {
    output_image_address0 =  (sc_lv<14>) (tmp_22_cast_fu_790_p1.read());
}

void doConv::thread_output_image_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        output_image_ce0 = ap_const_logic_1;
    } else {
        output_image_ce0 = ap_const_logic_0;
    }
}

void doConv::thread_output_image_d0() {
    output_image_d0 = tmp_reg_1156.read();
}

void doConv::thread_output_image_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_769_p2.read(), ap_const_lv1_0))) {
        output_image_we0 = ap_const_logic_1;
    } else {
        output_image_we0 = ap_const_logic_0;
    }
}

void doConv::thread_p_cast_fu_730_p1() {
    p_cast_fu_730_p1 = esl_zext<16,15>(p_s_fu_722_p3.read());
}

void doConv::thread_p_s_fu_722_p3() {
    p_s_fu_722_p3 = (!tmp_18_fu_714_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_18_fu_714_p3.read()[0].to_bool())? ap_const_lv15_0: valOutput_1_cast_fu_709_p2.read());
}

void doConv::thread_pixConvolved_1_fu_604_p3() {
    pixConvolved_1_fu_604_p3 = (!tmp_3_reg_995.read()[0].is_01())? sc_lv<32>(): ((tmp_3_reg_995.read()[0].to_bool())? pixConvolved_2_fu_585_p2.read(): ap_const_lv32_0);
}

void doConv::thread_pixConvolved_2_fu_585_p2() {
    pixConvolved_2_fu_585_p2 = (!ap_const_lv32_1.is_01() || !ap_phi_mux_pixConvolved_phi_fu_360_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(ap_phi_mux_pixConvolved_phi_fu_360_p4.read()));
}

void doConv::thread_row_1_fu_751_p2() {
    row_1_fu_751_p2 = (!row_reg_390.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(row_reg_390.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void doConv::thread_tmp12_fu_696_p2() {
    tmp12_fu_696_p2 = (!tmp13_reg_1116.read().is_01() || !tmp14_reg_1141.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp13_reg_1116.read()) + sc_bigint<16>(tmp14_reg_1141.read()));
}

void doConv::thread_tmp1_fu_534_p2() {
    tmp1_fu_534_p2 = (icmp_fu_500_p2.read() & icmp3_fu_516_p2.read());
}

void doConv::thread_tmp2_fu_540_p2() {
    tmp2_fu_540_p2 = (tmp_6_fu_522_p2.read() & tmp_7_fu_528_p2.read());
}

void doConv::thread_tmp9_fu_681_p2() {
    tmp9_fu_681_p2 = (!tmp3_reg_1106.read().is_01() || !grp_fu_816_p3.read().is_01())? sc_lv<16>(): (sc_bigint<16>(tmp3_reg_1106.read()) + sc_bigint<16>(grp_fu_816_p3.read()));
}

void doConv::thread_tmp_10_cast_fu_781_p1() {
    tmp_10_cast_fu_781_p1 = esl_zext<16,8>(col_reg_401.read());
}

void doConv::thread_tmp_10_fu_506_p4() {
    tmp_10_fu_506_p4 = ap_phi_mux_col_assign_phi_fu_383_p4.read().range(31, 1);
}

void doConv::thread_tmp_11_cast_fu_471_p3() {
    tmp_11_cast_fu_471_p3 = esl_concat<9,7>(tmp_5_fu_467_p1.read(), ap_const_lv7_0);
}

void doConv::thread_tmp_11_fu_578_p1() {
    tmp_11_fu_578_p1 = esl_zext<64,32>(ap_phi_mux_pixConvolved_phi_fu_360_p4.read());
}

void doConv::thread_tmp_12_fu_678_p1() {
    tmp_12_fu_678_p1 = grp_fu_816_p3.read().range(15-1, 0);
}

void doConv::thread_tmp_13_fu_665_p1() {
    tmp_13_fu_665_p1 = grp_fu_802_p3.read().range(15-1, 0);
}

void doConv::thread_tmp_14_fu_700_p2() {
    tmp_14_fu_700_p2 = (!tmp_12_reg_1126.read().is_01() || !tmp_13_reg_1111.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_12_reg_1126.read()) + sc_biguint<15>(tmp_13_reg_1111.read()));
}

void doConv::thread_tmp_15_cast_fu_485_p1() {
    tmp_15_cast_fu_485_p1 = esl_sext<64,16>(tmp_s_fu_479_p2.read());
}

void doConv::thread_tmp_15_fu_691_p2() {
    tmp_15_fu_691_p2 = (!tmp_16_fu_688_p1.read().is_01() || !tmp_17_reg_1121.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_16_fu_688_p1.read()) + sc_biguint<15>(tmp_17_reg_1121.read()));
}

void doConv::thread_tmp_16_fu_688_p1() {
    tmp_16_fu_688_p1 = grp_fu_824_p3.read().range(15-1, 0);
}

void doConv::thread_tmp_17_fu_668_p1() {
    tmp_17_fu_668_p1 = grp_fu_795_p3.read().range(15-1, 0);
}

void doConv::thread_tmp_18_fu_714_p3() {
    tmp_18_fu_714_p3 = valOutput_1_fu_704_p2.read().range(15, 15);
}

void doConv::thread_tmp_19_fu_757_p3() {
    tmp_19_fu_757_p3 = esl_concat<8,7>(row_reg_390.read(), ap_const_lv7_0);
}

void doConv::thread_tmp_20_0_1_fu_591_p1() {
    tmp_20_0_1_fu_591_p1 = esl_zext<64,32>(pixConvolved_2_fu_585_p2.read());
}

void doConv::thread_tmp_20_0_2_fu_626_p1() {
    tmp_20_0_2_fu_626_p1 = esl_zext<64,32>(col_assign_1_0_2_reg_1021.read());
}

void doConv::thread_tmp_20_fu_785_p2() {
    tmp_20_fu_785_p2 = (!tmp_21_cast_reg_1169.read().is_01() || !tmp_10_cast_fu_781_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_21_cast_reg_1169.read()) + sc_biguint<16>(tmp_10_cast_fu_781_p1.read()));
}

void doConv::thread_tmp_21_cast_fu_765_p1() {
    tmp_21_cast_fu_765_p1 = esl_zext<16,15>(tmp_19_fu_757_p3.read());
}

void doConv::thread_tmp_22_cast_fu_790_p1() {
    tmp_22_cast_fu_790_p1 = esl_zext<64,16>(tmp_20_fu_785_p2.read());
}

void doConv::thread_tmp_24_0_1_fu_420_p1() {
    tmp_24_0_1_fu_420_p1 = esl_sext<16,8>(kernel_load_1_reg_846.read());
}

void doConv::thread_tmp_24_0_2_fu_423_p1() {
    tmp_24_0_2_fu_423_p1 = esl_sext<16,8>(kernel_load_2_reg_856.read());
}

void doConv::thread_tmp_24_1_1_fu_429_p1() {
    tmp_24_1_1_fu_429_p1 = esl_sext<16,8>(kernel_load_4_reg_876.read());
}

void doConv::thread_tmp_24_1_2_fu_432_p1() {
    tmp_24_1_2_fu_432_p1 = esl_sext<16,8>(kernel_load_5_reg_886.read());
}

void doConv::thread_tmp_24_1_fu_426_p1() {
    tmp_24_1_fu_426_p1 = esl_sext<16,8>(kernel_load_3_reg_866.read());
}

void doConv::thread_tmp_24_2_1_fu_438_p1() {
    tmp_24_2_1_fu_438_p1 = esl_sext<16,8>(kernel_load_7_reg_906.read());
}

void doConv::thread_tmp_24_2_2_fu_441_p1() {
    tmp_24_2_2_fu_441_p1 = esl_sext<16,8>(kernel_q0.read());
}

void doConv::thread_tmp_24_2_fu_435_p1() {
    tmp_24_2_fu_435_p1 = esl_sext<16,8>(kernel_load_6_reg_896.read());
}

void doConv::thread_tmp_2_fu_417_p1() {
    tmp_2_fu_417_p1 = esl_sext<16,8>(kernel_load_reg_836.read());
}

void doConv::thread_tmp_3_fu_552_p2() {
    tmp_3_fu_552_p2 = (!ap_phi_mux_col_assign_phi_fu_383_p4.read().is_01() || !ap_const_lv32_7F.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_col_assign_phi_fu_383_p4.read()) < sc_bigint<32>(ap_const_lv32_7F));
}

void doConv::thread_tmp_4_fu_463_p1() {
    tmp_4_fu_463_p1 = ap_phi_mux_col_assign_phi_fu_383_p4.read().range(16-1, 0);
}

void doConv::thread_tmp_5_fu_467_p1() {
    tmp_5_fu_467_p1 = ap_phi_mux_idxRow_phi_fu_372_p4.read().range(9-1, 0);
}

void doConv::thread_tmp_6_fu_522_p2() {
    tmp_6_fu_522_p2 = (!ap_phi_mux_col_assign_phi_fu_383_p4.read().is_01() || !ap_const_lv32_7E.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_col_assign_phi_fu_383_p4.read()) < sc_bigint<32>(ap_const_lv32_7E));
}

void doConv::thread_tmp_7_fu_528_p2() {
    tmp_7_fu_528_p2 = (!ap_phi_mux_idxRow_phi_fu_372_p4.read().is_01() || !ap_const_lv32_7E.is_01())? sc_lv<1>(): (sc_bigint<32>(ap_phi_mux_idxRow_phi_fu_372_p4.read()) < sc_bigint<32>(ap_const_lv32_7E));
}

void doConv::thread_tmp_8_fu_457_p1() {
    tmp_8_fu_457_p1 = esl_zext<64,32>(ap_phi_mux_col_assign_phi_fu_383_p4.read());
}

void doConv::thread_tmp_9_fu_490_p4() {
    tmp_9_fu_490_p4 = ap_phi_mux_idxRow_phi_fu_372_p4.read().range(31, 1);
}

void doConv::thread_tmp_fu_741_p1() {
    tmp_fu_741_p1 = valOutput_reg_344.read().range(8-1, 0);
}

void doConv::thread_tmp_s_fu_479_p2() {
    tmp_s_fu_479_p2 = (!tmp_11_cast_fu_471_p3.read().is_01() || !tmp_4_fu_463_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_11_cast_fu_471_p3.read()) + sc_biguint<16>(tmp_4_fu_463_p1.read()));
}

void doConv::thread_valOutput_1_cast_fu_709_p2() {
    valOutput_1_cast_fu_709_p2 = (!tmp_15_reg_1146.read().is_01() || !tmp_14_fu_700_p2.read().is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_15_reg_1146.read()) + sc_biguint<15>(tmp_14_fu_700_p2.read()));
}

void doConv::thread_valOutput_1_fu_704_p2() {
    valOutput_1_fu_704_p2 = (!tmp9_reg_1131.read().is_01() || !tmp12_fu_696_p2.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp9_reg_1131.read()) + sc_biguint<16>(tmp12_fu_696_p2.read()));
}

void doConv::thread_valOutput_2_fu_734_p3() {
    valOutput_2_fu_734_p3 = (!or_cond6_reg_990_pp0_iter2_reg.read()[0].is_01())? sc_lv<16>(): ((or_cond6_reg_990_pp0_iter2_reg.read()[0].to_bool())? p_cast_fu_730_p1.read(): valOutput_reg_344.read());
}

void doConv::thread_window_val_0_0_fu_621_p0() {
    window_val_0_0_fu_621_p0 =  (sc_lv<8>) (tmp_2_reg_916.read());
}

void doConv::thread_window_val_0_0_fu_621_p1() {
    window_val_0_0_fu_621_p1 =  (sc_lv<8>) (window_val_0_0_fu_621_p10.read());
}

void doConv::thread_window_val_0_0_fu_621_p10() {
    window_val_0_0_fu_621_p10 = esl_zext<16,8>(lineBuff_val_0_q0.read());
}

void doConv::thread_window_val_0_0_fu_621_p2() {
    window_val_0_0_fu_621_p2 = (!window_val_0_0_fu_621_p0.read().is_01() || !window_val_0_0_fu_621_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_0_0_fu_621_p0.read()) * sc_biguint<8>(window_val_0_0_fu_621_p1.read());
}

void doConv::thread_window_val_1_1_fu_636_p0() {
    window_val_1_1_fu_636_p0 =  (sc_lv<8>) (tmp_24_1_1_reg_936.read());
}

void doConv::thread_window_val_1_1_fu_636_p1() {
    window_val_1_1_fu_636_p1 =  (sc_lv<8>) (window_val_1_1_fu_636_p10.read());
}

void doConv::thread_window_val_1_1_fu_636_p10() {
    window_val_1_1_fu_636_p10 = esl_zext<16,8>(lineBuff_val_1_q0.read());
}

void doConv::thread_window_val_1_1_fu_636_p2() {
    window_val_1_1_fu_636_p2 = (!window_val_1_1_fu_636_p0.read().is_01() || !window_val_1_1_fu_636_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_1_1_fu_636_p0.read()) * sc_biguint<8>(window_val_1_1_fu_636_p1.read());
}

void doConv::thread_window_val_2_1_fu_651_p0() {
    window_val_2_1_fu_651_p0 =  (sc_lv<8>) (tmp_24_2_1_reg_951.read());
}

void doConv::thread_window_val_2_1_fu_651_p1() {
    window_val_2_1_fu_651_p1 =  (sc_lv<8>) (window_val_2_1_fu_651_p10.read());
}

void doConv::thread_window_val_2_1_fu_651_p10() {
    window_val_2_1_fu_651_p10 = esl_zext<16,8>(lineBuff_val_2_load_2_reg_1086.read());
}

void doConv::thread_window_val_2_2_fu_660_p0() {
    window_val_2_2_fu_660_p0 =  (sc_lv<8>) (tmp_24_2_2_reg_956.read());
}

void doConv::thread_window_val_2_2_fu_660_p1() {
    window_val_2_2_fu_660_p1 =  (sc_lv<8>) (window_val_2_2_fu_660_p10.read());
}

void doConv::thread_window_val_2_2_fu_660_p10() {
    window_val_2_2_fu_660_p10 = esl_zext<16,8>(lineBuff_val_2_q1.read());
}

void doConv::thread_window_val_2_2_fu_660_p2() {
    window_val_2_2_fu_660_p2 = (!window_val_2_2_fu_660_p0.read().is_01() || !window_val_2_2_fu_660_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(window_val_2_2_fu_660_p0.read()) * sc_biguint<8>(window_val_2_2_fu_660_p1.read());
}

void doConv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 1024 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond4_fu_445_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(exitcond4_fu_445_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 2048 : 
            if ((!(esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage1_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage2_subdone.read())) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(exitcond1_fu_745_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(exitcond_fu_769_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

void doConv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_image_address0\" :  \"" << input_image_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_image_ce0\" :  \"" << input_image_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_q0\" :  \"" << input_image_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_address0\" :  \"" << output_image_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_ce0\" :  \"" << output_image_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_we0\" :  \"" << output_image_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_d0\" :  \"" << output_image_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWVALID\" :  \"" << s_axi_CTRL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_AWREADY\" :  \"" << s_axi_CTRL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_AWADDR\" :  \"" << s_axi_CTRL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WVALID\" :  \"" << s_axi_CTRL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_WREADY\" :  \"" << s_axi_CTRL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WDATA\" :  \"" << s_axi_CTRL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_WSTRB\" :  \"" << s_axi_CTRL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARVALID\" :  \"" << s_axi_CTRL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_ARREADY\" :  \"" << s_axi_CTRL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_ARADDR\" :  \"" << s_axi_CTRL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RVALID\" :  \"" << s_axi_CTRL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_RREADY\" :  \"" << s_axi_CTRL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RDATA\" :  \"" << s_axi_CTRL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_RRESP\" :  \"" << s_axi_CTRL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BVALID\" :  \"" << s_axi_CTRL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CTRL_BUS_BREADY\" :  \"" << s_axi_CTRL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CTRL_BUS_BRESP\" :  \"" << s_axi_CTRL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_AWVALID\" :  \"" << s_axi_KERNEL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_AWREADY\" :  \"" << s_axi_KERNEL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_AWADDR\" :  \"" << s_axi_KERNEL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_WVALID\" :  \"" << s_axi_KERNEL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_WREADY\" :  \"" << s_axi_KERNEL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_WDATA\" :  \"" << s_axi_KERNEL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_WSTRB\" :  \"" << s_axi_KERNEL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_ARVALID\" :  \"" << s_axi_KERNEL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_ARREADY\" :  \"" << s_axi_KERNEL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_ARADDR\" :  \"" << s_axi_KERNEL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_RVALID\" :  \"" << s_axi_KERNEL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_RREADY\" :  \"" << s_axi_KERNEL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_RDATA\" :  \"" << s_axi_KERNEL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_RRESP\" :  \"" << s_axi_KERNEL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_BVALID\" :  \"" << s_axi_KERNEL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_KERNEL_BUS_BREADY\" :  \"" << s_axi_KERNEL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_KERNEL_BUS_BRESP\" :  \"" << s_axi_KERNEL_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

